#!/usr/bin/bash

# This script generates the HTML in index.html from any post that exists in the folder posts
# If you have never run this before, run scripts/install first.

#################################################
### F U N C T I O N   D E C L A R A T I O N S ###
#################################################

generatePost() {
    postSource=$1
    
    # Generate the post name from the source markdown file
    htmlPostFileName=$(echo $postSource | sed -e 's/released\//posts\//' -e 's/\.md/\.html/')
   
    # Generate the post content and save it in the destination HTML file
    markdown "$postSource" > "$htmlPostFileName"
    
    postPattern="--content--"
    # Apply the template to the content
    cat "templates/post.html" | sed "/$postPattern/ r $htmlPostFileName" | sed "/$postPattern/ d" > tmp
    mv tmp "$htmlPostFileName"
    
    # Insert post label from file name
    # First remove the date part, then remove the file extension, lastly replace hyphens with spaces
    postHeader=$(echo "$htmlPostFileName" | cut -d'_' -f2 | cut -d'.' -f1 | tr '-' ' ')
    cat "$htmlPostFileName" | sed "s/--postheader--/$postHeader/i" > tmp
    mv tmp "$htmlPostFileName"
    
    # Add href to link in header
    cat "$htmlPostFileName" | sed "s|--href--|/$htmlPostFileName|i" > tmp
    mv tmp "$htmlPostFileName"

    # Add word count metadata
    metadata="Words: "$(wc -w "$postSource" | cut -d' ' -f1)
    # Insert the metadata into the HTML file placeholder
    cat "$htmlPostFileName" | sed "s/--metadata--/$metadata/i" > tmp
    mv tmp "$htmlPostFileName"

    # Extract the date from the file name    
    postDate=$(echo "$postSource" | grep -o '[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}') 
    # Insert the date into the HTML file placeholder
    cat "$htmlPostFileName" | sed "s/--date--/$postDate/i" > tmp
    mv tmp "$htmlPostFileName"
    
    # Generate the nav bar
    generateNavBar "post" "navbar"
    # Prepend navbar
    cat navbar "$htmlPostFileName" > tmp
    # Remove the left over file
    rm navbar
    mv tmp "$htmlPostFileName"
    
    echo "$htmlPostFileName"
}

generatePostPreview() {
    postSource=$1
    
    previewFileName=$(echo $postSource | sed -e 's/released\//previews\//' -e 's/\.md/\.html/')
    
    # Generate the post content and save it in a temporary file
    head "$postSource" | markdown > "$previewFileName"
    
    postPattern="--content--"
    # Apply the template to the content
    cat "templates/preview.html" | sed "/$postPattern/ r $previewFileName" | sed "/$postPattern/ d" > tmp
    mv tmp "$previewFileName"
    
    # Insert post label from file name
    # First remove the date part, then remove the file extension, lastly replace hyphens with spaces
    postHeader=$(echo "$previewFileName" | cut -d'_' -f2 | cut -d'.' -f1 | tr '-' ' ')
    cat "$previewFileName" | sed "s/--header--/$postHeader/i" > tmp
    mv tmp "$previewFileName"
    
    
    # Generate the post name from the source markdown file
    htmlPostFileName=$(echo $postSource | sed -e 's/released\//posts\//' -e 's/\.md/\.html/')
    
    # Add href to link in header and in continue button
    cat "$previewFileName" | sed "s|--href--|/$htmlPostFileName|g" > tmp
    mv tmp "$previewFileName"

    # Add word count metadata
    metadata="Words: "$(wc -w "$postSource" | cut -d' ' -f1)
    # Insert the metadata into the HTML file placeholder
    cat "$previewFileName" | sed "s/--metadata--/$metadata/i" > tmp
    mv tmp "$previewFileName"

    # Extract the date from the file name    
    postDate=$(echo "$postSource" | grep -o '[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}') 
    # Insert the date into the HTML file placeholder
    cat "$previewFileName" | sed "s/--date--/$postDate/i" > tmp
    mv tmp "$previewFileName"
    
    echo "$previewFileName"
}


generateNavBar() {
    # Target of the generate
    target=$1
    # Declare target file variable
    targetFile=""    
    if [[ "$target" = "about" ]]; then
        # Write to the about index file
        targetFile="about/index.html"
        # Set the about pill as active
        cat "templates/navbar_default.html" | sed "s/--homeactive--//g" | sed "s/--aboutactive--/active/g" > tmp        
    elif [[ "$target" = "home" ]]; then    
        # Write to the main index file
        targetFile="index.html"
        # Set home pill as active
        cat "templates/navbar_default.html" | sed "s/--homeactive--/active/g" | sed "s/--aboutactive--//g" > tmp        
    elif [[ "$target" = "post" ]]; then    
        # Read the target file from input
        targetFile=$2
        # Set all pills as inactive
        cat "templates/navbar_default.html" | sed "s/--homeactive--//g" | sed "s/--aboutactive--//g"> tmp        
    else   
        echo "Unknown argument $target"
        exit 1
    fi
    # Add navigation to target file
    cat tmp >> "$targetFile"    
    # Remove temp file
    rm tmp
}

# Remove all previously compiled posts and previews
rm -rf posts/* previews/*

# Clear the index.html file and load the head of the file
cat "templates/page_head.html" > index.html 
generateNavBar "home"

# Loop over each markdown file in the post_src directory.
# A post is assumed to start with a date e.g. 2014-08-16
for postSource in $(find "released/" -name "*.md" | sort -n -r)
do
    # Create a preview of the post
    previewFileName=$(generatePostPreview "$postSource")
    
    # Append newly created preview to index.html document
    cat "$previewFileName" >> index.html
    
    #Generate the entire post
    htmlPostFileName=$(generatePost "$postSource")
    
    # Make the HTML file containing the post a real HTML document
    cat "templates/page_head.html" \
        "$htmlPostFileName" \
        "templates/page_tail.html" > tmp
    mv tmp "$htmlPostFileName" 
    
done

# Append the tail of the document so that we have comple the HTML
cat "templates/page_tail.html" >> index.html

# Generate about page
aboutFile="about/index.html"
cat "templates/page_head.html" > "$aboutFile"
generateNavBar "about"
markdown "about/index.md" >> "$aboutFile"
cat "templates/page_tail.html" >> "$aboutFile"


# Generate archive page
archiveFile="archive/index.html"
cat "templates/page_head.html" > "$archiveFile"
cat "templates/archive.html" >> "$archiveFile"
cat "templates/page_tail.html" >> "$archiveFile"


